*------------------------------------------------------------*
User:                2001231F
Date:                04,June,2022
Time:                21:27:52
Site:                11002449
Platform:            X64_8PRO
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
*------------------------------------------------------------*
* Training Log
Date:                04,June,2022
Time:                21:27:49
*------------------------------------------------------------*
14714  proc freq data=EMWS1.FIMPORT4_VariableSet noprint;
14715  table ROLE*LEVEL/out=WORK.FIMPORT4META;
14716  run;
 
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT4_VARIABLESET.
NOTE: The data set WORK.FIMPORT4META has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
14717  proc print data=WORK.FIMPORT4META label noobs;
14718  var ROLE LEVEL COUNT;
14719  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
14720  title9 ' ';
14721  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
14722  run;
 
NOTE: There were 4 observations read from the data set WORK.FIMPORT4META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
14723  title10;
 
14724  %let EMEXCEPTIONSTRING=;
15046  *------------------------------------------------------------*;
15047  * FIMPORT4: Generation of macros and macro variables;
15048  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15049  *------------------------------------------------------------*;
 
15050  %let EMEXCEPTIONSTRING=;
15051  *------------------------------------------------------------*;
15052  * TRAIN: FIMPORT4;
15053  *------------------------------------------------------------*;
15054  %let EM_ACTION = TRAIN;
15055  %let syscc = 0;
15056  /* Fimport.source */
15057  %macro main;
15058        %if %upcase(&EM_ACTION) = CREATE %then %do;
15059           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
15060           %include temp;
15061           filename temp;
15062           %create;
15063        %end;
15064        %else
15065        %if %upcase(&EM_ACTION) = TRAIN %then %do;
15066           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
15067           %include temp;
15068           filename temp;
15069           %train;
15070        %end;
15071        %else
15072        %if %upcase(&EM_ACTION) = UPDATE %then %do;
15073           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
15074           %include temp;
15075           filename temp;
15076           %update;
15077        %end;
15078        %else
15079        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
15080           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15081           %include temp;
15082           filename temp;
15083           %property;
15084        %end;
15085         %else
15086        %if %upcase(&EM_ACTION) = SCORE %then %do;
15087           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
15088           %include temp;
15089           filename temp;
15090           %score;
15091        %end;
15092        %else
15093        %if %upcase(&EM_ACTION) = REPORT %then %do;
15094           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
15095           %include temp;
15096           filename temp;
15097           %report;
15098        %end;
15099        %else
15100        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
15101           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15102           %include temp;
15103           filename temp;
15104           %openvariableset;
15105        %end;
15106        %else
15107        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
15108           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15109           %include temp;
15110           filename temp;
15111           %closevariableset;
15112        %end;
15113  %mend main;
15114  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_TRAIN.SOURCE.
15115 +%EM_GETNAME(key=USERIMPORTFILE, type=FILE, extension=txt);
15116 +%macro appendExt;
15117 +   data _null_;
15118 +      tempuif =  trim("&EM_USER_USERIMPORTFILE");
15119 +      rfile = reverse(tempuif);
15120 +      period = indexc(rfile,".");
15121 +      uif = substr(tempuif, 1, length(tempuif)- period+1);
15122 +      newuif = trim(uif)||trim("&EM_PROPERTY_FILETYPE");
15123 +      call symput("EM_USER_USERIMPORTFILE",%bquote(newuif));
15124 +   run;
15125 +%mend appendExt;
15127 +%macro getNobs(ds);
15128 + %global dset nobs;
15129 + %let dset=&ds;
15130 + %let dsid = %sysfunc(open(&dset));
15131 + %if &dsid %then %do;
15132 +      %let nobs =%sysfunc(attrn(&dsid,nobs));
15133 +      %let rc = %sysfunc(close(&dsid));
15134 +   %end;
15135 + %else %put open for data set &dset failed - %sysfunc(sysmsg());
15136 +%mend getNobs;
15137 +%macro keepordrop;
15138 +  proc contents data=work.importfile noprint
15139 +  out=work.importattrs;
15140 +  run;
15141 +  %getNobs(work.importattrs);
15142 +  data _null_;
15143 +    set  work.importattrs;
15144 +    call symput("varname"||left(_n_),name);
15145 +  run;
15147 +  %put nobs=&nobs  maxcols=&EM_PROPERTY_MAXCOLS;
15148 +  /* importattrs contains 1 observation for each VARIABLE in the data set. */
15149 +  %if &nobs > &EM_PROPERTY_MAXCOLS %then %do;
15150 +     %let diff = %eval(&nobs - &EM_PROPERTY_MAXCOLS);
15151 +     %put diff=&diff;
15152 +     %if %eval(&diff ge &EM_PROPERTY_MAXCOLS) %then %do;
15153 +         %let kORd = keep;
15154 +             %let start=1;
15155 +             %let end = &EM_PROPERTY_MAXCOLS;
15156 +       %end;
15157 +     %else %do;
15158 +         %let kORd = drop;
15159 +             %let start = &EM_PROPERTY_MAXCOLS + 1;
15160 +             %let end = &nobs;
15161 +       %end;
15162 +     data &em_user_data;
15163 +        set &em_user_data;
15164 +        &kORd
15165 +        %do i = &start %to &end;
15166 +            &&varname&i
15167 +         %end;
15168 +        ;
15169 +     run;
15170 +%end;
15171 +%mend keepordrop;
15172 +%macro dropformatvars;
15173 +   %put fmtcnt=&fmtcnt;
15174 +   data new;
15175 +     set work.importfile;
15176 +     %do i = 1 %to &fmtcnt;
15177 +       x1zy&i =put(&&varname&i,&&fmt&i);
15178 +     %end;
15179 +   run;
15180 +   data new;
15181 +     set new;
15182 +     drop
15183 +     %do i = 1 %to &fmtcnt;
15184 +     &&varname&i
15185 +     %end;
15186 +     ;
15187 +   run;
15188 +   proc datasets library=work nolist;
15189 +     modify new;
15190 +     %do i = 1 %to &fmtcnt;
15191 +     rename x1zy&i=&&varname&i;
15192 +     %end;
15193 +   run; quit;
15194 +   data work.importfile;
15195 +     set new;
15196 +   run;
15197 +%mend;
15199 +%macro procimport(out=);
15200 +   %if %upcase(&EM_PROPERTY_FILETYPE)=MDB %then %do;
15201 +      proc import table=%sysfunc(trim(&EM_PROPERTY_ACCESSTABLE))
15202 +         out=&out
15203 +         dbms = ACCESS
15204 +         replace;
15205 +         database="%trim(&_IFILENAME)"
15206 +   %end;
15207 +   %else %do;
15208 +       proc import datafile="%trim(&_IFILENAME)"
15209 +          out=&out
15211 +      %put filetype=*&EM_PROPERTY_FILETYPE.*;
15212 +      %put delimiter=*&EM_PROPERTY_DELIMITER.*;
15213 +      %if %upcase(&EM_PROPERTY_FILETYPE) ^= TXT %then %do;
15214 +         dbms=&EM_PROPERTY_FILETYPE
15215 +      %end;
15216 +      %else %do;
15217 +         dbms=TAB
15218 +      %end;
15219 +      /* Work around for the following defects:S0560899 and S0560009.   */
15220 +      %let sasEnv=%sysfunc(getlocenv());
15221 +      %if %upcase(&EM_PROPERTY_FILETYPE) = XLS and %upcase(&sasEnv) ^= SBCS %then %do;
15222 +         dbms=EXCEL
15223 +      %end;
15225 +      replace;
15226 +      %if %substr(%upcase(&EM_PROPERTY_FILETYPE),1,2)=WK | %upcase(&EM_PROPERTY_FILETYPE)=XLS
15227 +       | %upcase(&EM_PROPERTY_FILETYPE)=DLM | %upcase(&EM_PROPERTY_FILETYPE)=CSV
15228 +       | %upcase(&EM_PROPERTY_FILETYPE)=TAB | %upcase(&EM_PROPERTY_FILETYPE)=TXT %then %do;
15229 +        %if %length(&EM_PROPERTY_NAMEROW) > 0 %then %do;
15230 +            getnames=&EM_PROPERTY_NAMEROW;
15231 +        %end;
15232 +      %end;
15233 +      %if %upcase(&EM_PROPERTY_FILETYPE)=CSV | %upcase(&EM_PROPERTY_FILETYPE)=DLM |
15234 +          %upcase(&EM_PROPERTY_FILETYPE=TXT)  %then %do;
15235 +         %if (%length(%trim(%bquote(&EM_PROPERTY_DELIMITER))) > 0) %then %do;
15236 +            %if "%upcase(&EM_PROPERTY_DELIMITER)"="SP" %then %do;
15237 +               delimiter=" ";
15238 +            %end;
15239 +            %else %if "%upcase(&EM_PROPERTY_DELIMITER)"="TAB" %then %do;
15240 +               /* Do not specifiy a delimiter */
15241 +            %end;
15242 +            %else %do;
15243 +               delimiter="&EM_PROPERTY_DELIMITER";
15244 +            %end;
15245 +         %end;
15246 +         %if %eval(&EM_PROPERTY_SKIPROWS > 0) %then %do;
15247 +            datarow=&EM_PROPERTY_SKIPROWS;
15248 +            /* Guessingrows must be >= skiprows */
15249 +            %if %eval(&EM_PROPERTY_GUESSROWS < &EM_PROPERTY_SKIPROWS ) %then %do;
15250 +              %let EM_PROPERTY_GUESSROWS = &EM_PROPERTY_SKIPROWS;
15251 +            %end;
15252 +         %end;
15253 +         %if %eval(&EM_PROPERTY_GUESSROWS > 0) %then %do;
15254 +            guessingrows=&EM_PROPERTY_GUESSROWS;
15255 +         %end;
15256 +       %end;
15257 +      %if %upcase(&EM_PROPERTY_FILETYPE)=DTA | %upcase(&EM_PROPERTY_FILETYPE)=JMP
15258 +                 | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15259 +            FMTLIB = work.formats;
15260 +      %end;
15261 +   %end;
15262 +   run;
15263 +%mend procimport;
15265 +%macro train;
15267 +   %let vvnString = %sysfunc(getoption(validvarname));
15269 +   %em_getname(key=DATA,           type=DATA);
15270 +   %em_getname(key=EMCMETADEFAULT, type=DATA);
15271 +   %em_getname(key=EMTMETADEFAULT, type=DATA);
15272 +   %em_getname(key=EMSTATDEFAULT, type=DATA);
15274 +   %appendExt;
15276 +   %let _IFILENAME = %nrbquote(%trim(&EM_PROPERTY_IFILENAME));
15277 +   %if %upcase(&EM_PROPERTY_IMPORTTYPE) = LOCAL %then %do;
15278 +       %if %nrbquote(%sysfunc(fileexist(&EM_USER_USERIMPORTFILE))) %then
15279 +           %let _IFILENAME = %nrbquote(&EM_USER_USERIMPORTFILE);
15280 +   %end;
15282 +   %if ^%sysfunc(fileexist(%nrbquote(&_IFILENAME))) %then %do;
15283 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTRAININGCODEFILE,%nrbquote(&_IFILENAME);
15284 +       %goto endtrain;
15285 +   %end;
15287 +   options validvarname=ANY;
15288 +   %procimport(out=work.importfile);
15290 +   %if %upcase(&EM_PROPERTY_FILETYPE) = DTA | %upcase(&EM_PROPERTY_FILETYPE) = JMP
15291 +              | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15292 +      %global fmtcnt;
15293 +      %let fmtcnt=0;
15294 +      proc contents data=work.importfile out=work.impattrs noprint;
15295 +      run;
15296 +      data _null_;
15297 +        set work.impattrs;
15298 +        if _n_=1 then i=0;
15299 +        if substr(format,1,1) ^= "$" and length(trim(format)) > 1 then do;
15300 +           i = i+1;
15301 +           varname = substr(name, 1, length(name));
15302 +           call symput("fmt"||left(i), trim(format)||".");
15303 +           call symput("varname"||left(i), varname);
15304 +           call symput("fmtcnt",left(i));
15305 +      end;
15306 +      retain i;
15307 +     run;
15308 +    %if &fmtcnt > 0 %then %do;
15309 +       %dropformatvars;
15310 +    %end;
15311 +    proc datasets lib=work memtype=data nolist;
15312 +        modify importfile;
15313 +        attrib _all_ format=;
15314 +    run;
15315 +    quit;
15316 +   %end;
15318 +   %let _fimportObs  = 0;
15319 +   %let _fimportVars = 0;
15320 +   %if %sysfunc(exist(work.importFile)) %then %do;
15321 +       %let dsid = %sysfunc(open(work.importFile));
15322 +       %if &dsid %then %do;
15323 +           %let _fimportObs  = %sysfunc(attrn(&dsid, NOBS));
15324 +           %let _fimportVars = %sysfunc(attrn(&dsid, NVARS));
15325 +       %let dsid = %sysfunc(close(&dsid));
15326 +       %end;
15327 +   %end;
15329 +   %if ^&_fimportObs %then %do;
15330 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_OBS;
15331 +       %goto endtrain;
15332 +   %end;
15333 +   %if ^&_fimportVars %then %do;
15334 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_VARS;
15335 +       %goto endtrain;
15336 +   %end;
15338 +   data &em_user_data;
15339 +      set work.importfile(obs=&EM_PROPERTY_MAXROWS);
15340 +   run;
15341 +   %keepordrop;
15343 +   %em_getname(key=EMSTAT,     type=DATA);
15345 +   proc datasets lib=&em_lib nolist;
15346 +      delete &em_nodeid._EMSTATDEFAULT &em_nodeid._EMINFO;
15347 +   run;
15349 +   %if "&em_property_advancedadvisor" eq "Y" %then %do;
15350 +        %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=Y,
15351 +            intervalLevelLowerLimit=20, applyMaxPercentMissing=Y,
15352 +            maxPercentMissing=50, applyMaxClassLevels=Y,
15353 +            maxClassLevels=20, identifyEmptyColumns=Y,
15354 +            outdata=&em_user_EMCMETADEFAULT,
15355 +            computeStat=Y, statisticData=&em_user_EMSTATDEFAULT);
15357 +        data &em_user_emcmetadefault;
15358 +           set &em_user_emcmetadefault;
15359 +           drop nlevel pctmiss min max mean std skewness kurtosis;
15360 +        run;
15362 +        data &em_data_eminfo;
15363 +           length TARGET KEY $32  DATA $43;
15364 +           TARGET=""; KEY="STATS"; DATA="&em_user_emstatdefault"; output;
15365 +        run;
15367 +        %let EM_META_ADVISOR=ADVANCED;
15369 +   %end;
15370 +   %else %do;
15371 +       %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=N,
15372 +            applyMaxPercentMissing=N, applyMaxClassLevels=N,
15373 +            identifyEmptyColumns=N,   maxLevelDetection=0,
15374 +            outdata=&em_user_EMCMETADEFAULT, computeStat=N, statisticData=WORK.STATISTIC);
15376 +            %if "&em_property_summarize" eq "Y" %then %do;
15377 +                %em_getname(key=EMSTAT,  type=DATA);
15378 +                data &em_data_eminfo;
15379 +                   length TARGET KEY $32  DATA $43;
15380 +                   TARGET=""; KEY="STATS"; DATA="&em_user_emstat"; output;
15381 +                run;
15382 +            %end;
15384 +        %let EM_META_ADVISOR=BASIC;
15386 +   %end;
15388 +   %em_getname(key=VVNLABEL, type=FILE, extension=sas);
15389 +   data _null_;
15390 +      fname = '_text';
15391 +      rc=filename(fname, "&em_user_vvnlabel");
15392 +      if ^rc and fexist(fname) then
15393 +         rc=fdelete(fname);
15394 +     rc=filename(fname);
15395 +   run;
15398 +   /* Validvarname Case */
15399 +   %let newNameFlag = 0;
15400 +   %if %sysfunc(exist(&em_user_EMCMETADEFAULT)) %then %do;
15401 +       %let dsid = %sysfunc(open(&em_user_EMCMETADEFAULT));
15402 +        %if &dsid %then %do;
15403 +            %let newNameFlag = %sysfunc(varnum(&dsid, NEWNAME));
15404 +            %let dsid = %sysfunc(close(&dsid));
15405 +       %end;
15406 +   %end;
15408 +   %if %sysevalf(&newNameFlag>0) %then %do;
15409 +       proc contents data=work.importfile noprint out=work._any(keep=VARNUM NAME LABEL);
15410 +       run;
15411 +       proc sort data=work._any; by VARNUM; run; quit;
15413 +       options validvarname=V7;
15415 +       %procimport(out=work.importfile2);
15417 +       options validvarname=ANY;
15419 +       proc contents data=work.importfile2 noprint out=work._v7(rename=(NAME=V7NAME) keep=VARNUM NAME LABEL);
15420 +       run;
15421 +       proc sort data=work._v7; by varnum; run; quit;
15423 +       filename _FI "&em_user_vvnlabel";
15424 +       data work._names;
15425 +          length string $200;
15426 +          merge work._v7 work._any;
15427 +          by VARNUM;
15428 +          file _FI;
15429 +          if V7NAME ne NAME then do;
15430 +             string = trim(V7NAME)!!'= "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15431 +             put string;
15432 +             if LABEL eq '' then do;
15433 +                string = 'Label '!!trim(V7NAME)!!"='"!!tranwrd(trim(NAME), "'", "''")!!"';";
15434 +                put string;
15435 +             end;
15436 +             string='drop "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15437 +             put string;
15438 +          end;
15439 +          drop string;
15440 +       run;
15441 +       data &em_user_data;
15442 +          set &em_user_data;
15443 +          %if %sysfunc(fileexist(%nrbquote(&em_user_vvnlabel))) %then %do;
15444 +              filename _FI "&em_user_vvnlabel";
15445 +              %inc _FI;
15446 +             filename _FI;
15447 +          %end;
15448 +       run;
15450 +       proc sort data=&em_user_EMCMETADEFAULT; by NAME; run;
15451 +       proc sort data=work._names;             by NAME; run;
15453 +       data &em_user_EMCMETADEFAULT;
15454 +         merge  &em_user_EMCMETADEFAULT _names;
15455 +         by NAME;
15456 +         length DROP $1;
15457 +         DROP='N';
15458 +         if NEWNAME ne NAME then do;
15459 +            if LABEL eq '' then do;
15460 +               LABEL = NAME;
15461 +            end;
15462 +            NAME=V7NAME;
15463 +         end;
15464 +         drop NEWNAME V7NAME VARNUM;
15465 +       run;
15467 +       proc datasets lib=work nolist;
15468 +          delete _any _v7 _names importfile2;
15469 +       run;
15470 +       quit;
15472 +   %end;
15473 +   %else %do;
15474 +       data &em_user_EMCMETADEFAULT;
15475 +          set &em_user_EMCMETADEFAULT;
15476 +          length DROP $1;
15477 +          DROP='N';
15478 +       run;
15479 +   %end;
15481 +    %EmAdviseTable(&em_user_data, outdata=&em_user_EMTMETADEFAULT, newdataflag=Y);
15483 +   data _temp;
15484 +      set &em_user_emtmetadefault(rename=(ROLE=PORT MEMNAME=DATASET CRDATE=MODTIME));
15485 +      keep PORT LIBNAME DATASET MODTIME COLUMNMETA COLUMNMETAMODTIME NOBS;
15486 +      PORT='DATA'; COLUMNMETA="&em_nodeid._EMCMETADEFAULT";
15487 +      COLUMNMETAMODTIME=MODTIME;
15488 +   run;
15489 +   proc sort data=&em_data_importset;
15490 +      by PORT;
15491 +   run;
15492 +   data &em_data_importset;
15493 +      merge &em_data_importset _temp;
15494 +      by PORT;
15495 +      if PORT='DATA' then ROLE="&em_property_role";
15496 +   run;
15498 +    %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
15500 +    %if %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
15501 +        %if %sysfunc(fileexist(&em_user_variablesetdelta)) %then %do;
15502 +            filename x "&em_user_variablesetdelta";
15503 +            data &em_data_variableset;
15504 +               set &em_user_emcmetadefault;
15505 +               %inc X;
15506 +            run;
15507 +            filename x;
15508 +        %end;
15509 +        %else %do;
15510 +            data &em_data_variableset;
15511 +               set &em_user_emcmetadefault;
15512 +            run;
15513 +        %end;
15514 +    %end;
15516 +   %if %sysfunc(exist(&em_data_variableset)) and %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
15517 +      proc compare compare=&em_data_variableset base=&em_user_emcmetadefault
15518 +         noprint outnoequal outbase outcomp out=_DiffMeta noprint;
15519 +         id NAME;
15520 +      run;
15522 +         filename x1 "&EM_FILE_CDELTA_TRAIN";
15523 +         data _null_;
15524 +            length string $200;
15525 +            set _DiffMeta end=eof;
15526 +            where _type_='COMPARE';
15527 +            file x1;
15528 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
15529 +            put string;
15530 +            string = '   ROLE="'!!strip(ROLE)!!'";';
15531 +            put string;
15532 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
15533 +            put string;
15534 +            string = '   ORDER="'!!strip(ORDER)!!'";';
15535 +            put string;
15536 +            put 'end;';
15537 +            if drop='Y' then do;
15538 +               string='if NAME="'!!strip(NAME)!!'" then delete;';
15539 +               put string;
15540 +            end;
15541 +            if eof then
15542 +               put 'drop DROP;';
15543 +         run;
15545 +         %em_getname(key=DELTACODE,      type=FILE, extension=txt);
15546 +         filename x2 "&em_user_deltacode";
15547 +         %em_copyfile(infref=x1, outfref=x2);
15548 +         filename x1;
15549 +         filename x2;
15551 +         %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
15552 +         filename x "&em_user_variablesetdelta";
15553 +         data _null_;
15554 +            length string $200;
15555 +            set _DiffMeta end=eof;
15556 +            where _type_='COMPARE';
15557 +            file x;
15558 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
15559 +            put string;
15560 +            string = '   ROLE="'!!strip(ROLE)!!'";';
15561 +            put string;
15562 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
15563 +            put string;
15564 +            string = '   ORDER="'!!strip(ORDER)!!'";';
15565 +            put string;
15566 +            string = '   DROP="'!!strip(DROP)!!'";';
15567 +            put string;
15568 +            put 'end;';
15569 +         run;
15570 +         filename x;
15571 +       proc datasets lib=work nolist;
15572 +          delete _DiffMeta;
15573 +       run;
15575 +       data &em_data_exportset;
15576 +          set &em_data_exportset;
15577 +          if NODEPORT='TRAIN' then do;
15578 +             ROLE="&em_property_role";
15579 +             COLUMNMETAMODTIME=datetime();
15580 +             MODTIME=datetime();
15581 +             DATASET="&em_nodeid._train";
15582 +             COLUMNMETA="&em_nodeid._CMeta_TRAIN";
15583 +             DELTACODE="CDelta_TRAIN";
15584 +             APPLYDELTA='Y';
15585 +             EXPORT='Y';
15586 +             NEEDUPDATE='Y';
15588 +            %if "&em_property_advancedadvisor" eq "Y" %then %do;
15589 +                EMINFO="&em_data_eminfo";
15590 +                EMINFOMODTIME=datetime();
15591 +            %end;
15592 +            %else %do;
15593 +                EMINFO='';
15594 +                EMINFOMODTIME=.;
15595 +            %end;
15596 +          end;
15597 +       run;
15598 +   %end;
15600 +  proc contents data=&em_user_data;
15601 +  run;
15602 +  proc datasets library=work nolist;
15603 +   delete importfile importattrs new;
15604 +   quit;
15605 +  run;
15607 +  /* Reset VALIDVARNAME to original settings */
15608 +  options validvarname=&vvnString;
15610 +  %endtrain:
15611 +%mend train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
filetype=*csv*
delimiter=*,*
 
15612   /**********************************************************************
15613   *   PRODUCT:   SAS
15614   *   VERSION:   9.4
15615   *   CREATOR:   External File Interface
15616   *   DATE:      04JUN22
15617   *   DESC:      Generated SAS Datastep Code
15618   *   TEMPLATE SOURCE:  (None Specified.)
15619   ***********************************************************************/
15620      data WORK.IMPORTFILE    ;
15621      %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
15622      infile 'C:\Users\2001231F\Desktop\Predictive\Workspaces\EMWS1\FIMPORT4\USERIMPORTFILE.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
15623         informat month anydtdtm40. ;
15624         informat bidding_no best32. ;
15625         informat vehicle_class $10. ;
15626         informat quota best32. ;
15627         informat bids_success best32. ;
15628         informat bids_received best32. ;
15629         informat premium best32. ;
15630         format month datetime. ;
15631         format bidding_no best12. ;
15632         format vehicle_class $10. ;
15633         format quota best12. ;
15634         format bids_success best12. ;
15635         format bids_received best12. ;
15636         format premium best12. ;
15637      input
15638                  month
15639                  bidding_no
15640                  vehicle_class $
15641                  quota
15642                  bids_success
15643                  bids_received
15644                  premium
15645      ;
15646      if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
15647      run;
 
NOTE: The infile 'C:\Users\2001231F\Desktop\Predictive\Workspaces\EMWS1\FIMPORT4\USERIMPORTFILE.csv' is:
      Filename=C:\Users\2001231F\Desktop\Predictive\Workspaces\EMWS1\FIMPORT4\USERIMPORTFILE.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=47634,
      Last Modified=04,June,2022 21:26:59,
      Create Time=04,June,2022 21:26:59
 
NOTE: 1168 records were read from the infile 'C:\Users\2001231F\Desktop\Predictive\Workspaces\EMWS1\FIMPORT4\USERIMPORTFILE.csv'.
      The minimum record length was 36.
      The maximum record length was 41.
NOTE: The data set WORK.IMPORTFILE has 1168 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1168 rows created in WORK.IMPORTFILE from C:\Users\2001231F\Desktop\Predictive\Workspaces\EMWS1\FIMPORT4\USERIMPORTFILE.csv.
 
 
 
NOTE: WORK.IMPORTFILE data set was successfully created.
NOTE: The data set WORK.IMPORTFILE has 1168 observations and 7 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
 
 
NOTE: There were 1168 observations read from the data set WORK.IMPORTFILE.
NOTE: The data set EMWS1.FIMPORT4_DATA has 1168 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The data set WORK.IMPORTATTRS has 7 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      23:137
NOTE: There were 7 observations read from the data set WORK.IMPORTATTRS.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
nobs=7  maxcols=10000
 
NOTE: The file EMWS1.FIMPORT4_EMSTATDEFAULT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.FIMPORT4_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
15648  %let SYSCC = 0;
15649  %let _dsidTable = 0;
15650  %let _engineTable =;
15651  data _null_;
15652  dsid = open('EMWS1.FIMPORT4_DATA');
15653  call symput('_dsidTable', strip(put(dsid, best.)));
15654  if dsid then do;
15655  call symput('_engineTable', attrc(dsid, 'ENGINE'));
15656  dsid = close(dsid);
15657  end;
15658  run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15659  options fmterr;
15660  data _metaTestView;
15661  set EMWS1.FIMPORT4_DATA;
15662  if _N_=1 then do;
15663  output;
15664  stop;
15665  end;
15666  run;
 
NOTE: There were 1 observations read from the data set EMWS1.FIMPORT4_DATA.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15667  proc contents data=EMWS1.FIMPORT4_DATA
15668  out=WORK.M1XVHDDC noprint;
15669  run;
 
NOTE: The data set WORK.M1XVHDDC has 7 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15670  data WORK.M1XVHDDC;
15671  length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
15672  label NAME =;
15673  set WORK.M1XVHDDC(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
15674  if itype = 1 then type = 'N';
15675  else type = 'C';
15676  if formatl > 0 then do;
15677  if format ne '' then do;
15678  if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
15679  else format = strip(format)!!strip(put(formatl, best12.))!!'.';
15680  end;
15681  else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
15682  end;
15683  else if format ne '' then format = strip(format)!!'.';
15684  if informl > 0 then do;
15685  if informat ne ' ' then do;
15686  if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
15687  else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
15688  end;
15689  else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
15690  end;
15691  else if informat ne '' then informat = strip(informat)!!'.';
15692  if idxusage = 'NONE' then index ="N";
15693  else index = "Y";
15694  indextype = idxusage;
15695  drop idxusage itype formatl formatd informl informd;
15696  run;
 
NOTE: There were 7 observations read from the data set WORK.M1XVHDDC.
NOTE: The data set WORK.M1XVHDDC has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
15697  data WORK.M1XVHDDC;
15698  length UNAME $64;
15699  set WORK.M1XVHDDC;
15700  UNAME = upcase(NAME);
15701  run;
 
NOTE: There were 7 observations read from the data set WORK.M1XVHDDC.
NOTE: The data set WORK.M1XVHDDC has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
15705  data WORK.M0AHRQHH;
15706  drop UNAME;
15707  set WORK.M0AHRQHH;
15708  run;
 
NOTE: There were 7 observations read from the data set WORK.M0AHRQHH.
NOTE: The data set WORK.M0AHRQHH has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.25 seconds
      cpu time            0.15 seconds
 
 
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT4_EMCMETADEFAULT.
NOTE: The data set EMWS1.FIMPORT4_EMCMETADEFAULT has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
15959  %let SYSCC = 0;
15960  data EMWS1.FIMPORT4_EMTMETADEFAULT;
15961  length LIBNAME $8;
15962  LIBNAME = "EMWS1";
15963  run;
 
NOTE: The data set EMWS1.FIMPORT4_EMTMETADEFAULT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS1.FIMPORT4_EMTMETADEFAULT.
NOTE: The data set WORK._TEMP has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS1.FIMPORT4_IMPORTSET.
NOTE: The data set EMWS1.FIMPORT4_IMPORTSET has 15 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS1.FIMPORT4_IMPORTSET.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS1.FIMPORT4_IMPORTSET has 15 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file X is file C:\Users\2001231F\Desktop\Predictive\Workspaces\EMWS1\FIMPORT4\VARIABLESETDELTA.txt.
15992 +if NAME="bidding_no" then do;
15993 +ROLE="INPUT";
15994 +LEVEL="NOMINAL";
15995 +ORDER="";
15996 +DROP="N";
15997 +end;
15998 +if NAME="premium" then do;
15999 +ROLE="TARGET";
16000 +LEVEL="INTERVAL";
16001 +ORDER="";
16002 +DROP="N";
16003 +end;
NOTE: %INCLUDE (level 1) ending.
 
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT4_EMCMETADEFAULT.
NOTE: The data set EMWS1.FIMPORT4_VARIABLESET has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT4_VARIABLESET.
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT4_EMCMETADEFAULT.
NOTE: The data set WORK._DIFFMETA has 4 observations and 23 variables.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file X1 is:
      Filename=C:\Users\2001231F\Desktop\Predictive\Workspaces\EMWS1\FIMPORT4\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=04,June,2022 21:27:50,
      Create Time=04,June,2022 21:24:18
 
NOTE: 11 records were written to the file X1.
      The minimum record length was 4.
      The maximum record length was 29.
NOTE: There were 2 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file X2 is:
      Filename=C:\Users\2001231F\Desktop\Predictive\Workspaces\EMWS1\FIMPORT4\DELTACODE.txt,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=04,June,2022 21:27:50,
      Create Time=04,June,2022 21:24:18
 
NOTE: 11 records were written to the file X2.
      The minimum record length was 4.
      The maximum record length was 29.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X1 has been deassigned.
NOTE: Fileref X2 has been deassigned.
 
NOTE: The file X is:
      Filename=C:\Users\2001231F\Desktop\Predictive\Workspaces\EMWS1\FIMPORT4\VARIABLESETDELTA.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=04,June,2022 21:27:50,
      Create Time=04,June,2022 21:24:18
 
NOTE: 12 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 29.
NOTE: There were 2 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: Deleting WORK._DIFFMETA (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS1.FIMPORT4_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT4_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
NOTE: The PROCEDURE CONTENTS printed page 2.
 
 
NOTE: The file WORK.NEW (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.IMPORTFILE (memtype=DATA).
NOTE: Deleting WORK.IMPORTATTRS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
16004  *------------------------------------------------------------*;
16005  * End TRAIN: FIMPORT4;
16006  *------------------------------------------------------------*;
 
16007  *------------------------------------------------------------*;
16008  * Close any missing semi colons;
16009  *------------------------------------------------------------*;
16010  ;
16011  ;
16012  ;
16013  ;
16014  quit;
16015  *------------------------------------------------------------*;
16016  * Close any unbalanced quotes;
16017  *------------------------------------------------------------*;
16018  /*; *"; *'; */
16019  ;
16020  run;
16021  quit;
16022  /* Reset EM Options */
16023  options formchar="|----|+|---+=|-/\<>*";
16024  options nocenter ls=256 ps=10000;
16025  goptions reset=all device=GIF NODISPLAY;
 
*------------------------------------------------------------*
* Score Log
Date:                04,June,2022
Time:                21:27:51
*------------------------------------------------------------*
16127  %let EMEXCEPTIONSTRING=;
16128  *------------------------------------------------------------*;
16129  * SCORE: FIMPORT4;
16130  *------------------------------------------------------------*;
16131  %let EM_ACTION = SCORE;
16132  %let syscc = 0;
16133  /* Fimport.source */
16134  %macro main;
16135        %if %upcase(&EM_ACTION) = CREATE %then %do;
16136           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16137           %include temp;
16138           filename temp;
16139           %create;
16140        %end;
16141        %else
16142        %if %upcase(&EM_ACTION) = TRAIN %then %do;
16143           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16144           %include temp;
16145           filename temp;
16146           %train;
16147        %end;
16148        %else
16149        %if %upcase(&EM_ACTION) = UPDATE %then %do;
16150           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16151           %include temp;
16152           filename temp;
16153           %update;
16154        %end;
16155        %else
16156        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16157           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16158           %include temp;
16159           filename temp;
16160           %property;
16161        %end;
16162         %else
16163        %if %upcase(&EM_ACTION) = SCORE %then %do;
16164           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16165           %include temp;
16166           filename temp;
16167           %score;
16168        %end;
16169        %else
16170        %if %upcase(&EM_ACTION) = REPORT %then %do;
16171           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16172           %include temp;
16173           filename temp;
16174           %report;
16175        %end;
16176        %else
16177        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16178           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16179           %include temp;
16180           filename temp;
16181           %openvariableset;
16182        %end;
16183        %else
16184        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16185           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16186           %include temp;
16187           filename temp;
16188           %closevariableset;
16189        %end;
16190  %mend main;
16191  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_SCORE.SOURCE.
16192 +%macro score;
16193 +
16194 +   filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
16195 +   data _null_;
16196 +      file x;
16197 +      put ' ';
16198 +   run;
16199 +   filename x;
16200 +
16201 +   %em_getname(key=DATA, type=DATA);
16202 +   %if %sysfunc(exist(&em_user_data)) %then %do;
16203 +       data &em_export_train / view=&em_export_train;
16204 +          set &em_user_data;
16205 +       run;
16206 +   %end;
16207 +
16208 +%mend score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file X is:
      Filename=C:\Users\2001231F\Desktop\Predictive\Workspaces\EMWS1\FIMPORT4\_updatePath.st,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=04,June,2022 21:27:50,
      Create Time=04,June,2022 21:27:32
 
NOTE: 1 record was written to the file X.
      The minimum record length was 1.
      The maximum record length was 1.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: DATA STEP view saved on file EMWS1.FIMPORT4_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16209  *------------------------------------------------------------*;
16210  * End SCORE: FIMPORT4;
16211  *------------------------------------------------------------*;
 
16213  *------------------------------------------------------------*;
16214  * FIMPORT4: Computing metadata for TRAIN data;
16215  *------------------------------------------------------------*;
 
NOTE: View EMWS1.FIMPORT4_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS1.FIMPORT4_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                04,June,2022
Time:                21:27:52
*------------------------------------------------------------*
16587  %let EMEXCEPTIONSTRING=;
16588  *------------------------------------------------------------*;
16589  * REPORT: FIMPORT4;
16590  *------------------------------------------------------------*;
16591  %let EM_ACTION = REPORT;
16592  %let syscc = 0;
16593  /* Fimport.source */
16594  %macro main;
16595        %if %upcase(&EM_ACTION) = CREATE %then %do;
16596           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16597           %include temp;
16598           filename temp;
16599           %create;
16600        %end;
16601        %else
16602        %if %upcase(&EM_ACTION) = TRAIN %then %do;
16603           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16604           %include temp;
16605           filename temp;
16606           %train;
16607        %end;
16608        %else
16609        %if %upcase(&EM_ACTION) = UPDATE %then %do;
16610           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16611           %include temp;
16612           filename temp;
16613           %update;
16614        %end;
16615        %else
16616        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16617           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16618           %include temp;
16619           filename temp;
16620           %property;
16621        %end;
16622         %else
16623        %if %upcase(&EM_ACTION) = SCORE %then %do;
16624           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16625           %include temp;
16626           filename temp;
16627           %score;
16628        %end;
16629        %else
16630        %if %upcase(&EM_ACTION) = REPORT %then %do;
16631           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16632           %include temp;
16633           filename temp;
16634           %report;
16635        %end;
16636        %else
16637        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16638           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16639           %include temp;
16640           filename temp;
16641           %openvariableset;
16642        %end;
16643        %else
16644        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16645           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16646           %include temp;
16647           filename temp;
16648           %closevariableset;
16649        %end;
16650  %mend main;
16651  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_REPORT.SOURCE.
16652 +%macro report;
16653 +    %em_getname(key=EMSTAT,     type=DATA);
16654 +    %em_getname(key=EMINFO,     type=DATA);
16655 +    %em_getname(key=CLASS,      type=DATA);
16656 +    %em_getname(key=INTERVAL,   type=DATA);
16657 +
16658 +    %em_REPORT(key=EMSTAT,   viewtype=DATA, description=EMSTAT, block=Report, autodisplay=Y);
16659 +    %em_REPORT(key=INTERVAL, viewtype=LATTICE, LATTICETYPE=HISTOGRAM, LATTICEX=VARIABLE, DISCRETEX=Y, X=VALUE,FREQ=PERCENT,block=Report, description=INTERVALTARGET, autodisplay=N);
16660 +    %em_REPORT(key=CLASS, viewtype=LATTICE, LATTICEtype=BAR, LATTICEX=VARIABLE, X=VALUE,FREQ=PERCENT, block=Report, description=CLASSTARGET, autodisplay=Y);
16661 +
16662 +    %if &em_property_summarize eq Y %then %do;
16663 +        filename temp catalog 'sashelp.emmeta.emadvisestatistics.source';
16664 +        %include temp;
16665 +        filename temp;
16666 +
16667 +        data work.tempmeta;
16668 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16669 +           if ROLE='TARGET' and LEVEL ne 'INTERVAL' then output;
16670 +         run;
16671 +
16672 +        %class_profile(DATA=&em_export_train, OUTPUT=&em_user_class, VARS=,
16673 +                      METADATA=tempmeta, STAT=_STAT, FREQ=);
16674 +
16675 +         data work.tempmeta;
16676 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16677 +            if ROLE='TARGET' and LEVEL eq 'INTERVAL' then output;
16678 +         run;
16679 +         %var_profile(DATA=&em_export_train, OUTPUT=&em_user_INTERVAL, VARS=, METADATA=tempmeta, COMPUTESTAT=Y, STAT=_STAT, FREQ=,
16680 +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
16681 +
16682 +        data work.tempmeta;
16683 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16684 +        run;
16685 +
16686 +        %if "&em_property_advancedadvisor" eq "N" %then %do;
16687 +            %EmAdviseStat(&em_export_train, maxClassLevels=32, metadata=tempmeta, statisticData=&em_user_emstat);
16688 +
16689 +            data &em_data_exportset;
16690 +                 set &em_data_exportset;
16691 +                 if NODEPORT='TRAIN' then do;
16692 +                    EMINFO="&em_data_eminfo";
16693 +                    EMINFOMODTIME=datetime();
16694 +                 end;
16695 +            run;
16696 +        %end;
16697 +        %else %do;
16698 +            %em_getname(key=EMSTATDEFAULT,     type=DATA);
16699 +            %if %sysfunc(exist(&em_user_emstatdefault)) %then %do;
16700 +                data &em_user_emstat /  view=&em_user_emstat;
16701 +                   set &em_user_emstatdefault;
16702 +                run;
16703 +            %end;
16704 +        %end;
16705 +    %end;
16706 +    %else %do;
16707 +        %if "&em_property_advancedadvisor" eq "N" %then %do;
16708 +            proc datasets lib=&em_lib nolist;
16709 +               delete &em_nodeid._EMINFO;
16710 +            run;
16711 +            quit;
16712 +            data &em_data_exportset;
16713 +                 set &em_data_exportset;
16714 +                 if NODEPORT='TRAIN' then do;
16715 +                    EMINFO="";
16716 +                    EMINFOMODTIME=.;
16717 +                 end;
16718 +            run;
16719 +        %end;
16720 +    %end;
16721 +
16722 +    data &em_data_exportset;
16723 +       set &em_data_exportset;
16724 +       if NODEPORT='TRAIN' then do;
16725 +          ROLE="&em_property_role";
16726 +       end;
16727 +    run;
16728 +
16729 +    %if %sysfunc(exist(&em_data_variableSet)) %then %do;
16730 +        proc freq data=&em_data_variableset noprint;
16731 +             table ROLE*LEVEL/out=work.tempMeta;
16732 +        run;
16733 +        proc print data=work.tempmeta label noobs;
16734 +           var ROLE LEVEL COUNT;
16735 +           label ROLE  = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))"
16736 +                 LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))"
16737 +                 COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
16738 +        title9  ' ';
16739 +        title10  "%sysfunc(sasmsg(sashelp.dmine, rpt_exptattributes_title, NOQUOTE, TRAIN))";
16740 +        run;
16741 +        title10;
16742 +    %end;
16743 +
16744 +    %if %sysfunc(exist(work.tempmeta)) %then %do;
16745 +        proc datasets lib=work nolist;
16746 +           delete tempmeta;
16747 +        run;
16748 +        quit;
16749 +    %end;
16750 +
16751 +%mend report;
16752 +
16753 +
16754 +
16755 +
16756 +
16757 +
16758 +
16759 +
16760 +
16761 +
16762 +
16763 +
16764 +
16765 +
16766 +
16767 +
16768 +
16769 +
16770 +
16771 +
16772 +
16773 +
16774 +
16775 +
16776 +
16777 +
16778 +
16779 +
16780 +
16781 +
16782 +
16783 +
16784 +
16785 +
16786 +
16787 +
16788 +
16789 +
16790 +
16791 +
16792 +
16793 +
16794 +
16795 +
16796 +
16797 +
16798 +
16799 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 396 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: The file EMWS1.FIMPORT4_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS1.FIMPORT4_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT4_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS1.FIMPORT4_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT4_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT4_VARIABLESET.
NOTE: The data set WORK.TEMPMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK.TEMPMETA.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPMETA (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
16800  *------------------------------------------------------------*;
16801  * End REPORT: FIMPORT4;
16802  *------------------------------------------------------------*;
 
16803  /* Reset EM Options */
16804  options formchar="|----|+|---+=|-/\<>*";
16805  options nocenter ls=256 ps=10000;
16806  goptions reset=all device=GIF NODISPLAY;
 
16807  proc sort data=WORK.EM_USER_REPORT;
16808  by ID VIEW;
16809  run;
 
NOTE: There were 396 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 396 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
